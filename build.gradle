plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id "org.sonarqube" version "3.3"
    id "jacoco"
}

sonarqube {
    properties {
        property "sonar.projectKey", "potato-club_national-petition-backend"
        property "sonar.organization", "potato-club"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/jacoco/jacoco.xml"
    }
}

group = 'com.example'
sourceCompatibility = '11'

// 현식추가
archivesBaseName = 'national-petition-backend'

tasks.jar {
    enabled = false
}

tasks.bootJar {
    enabled = true
    mainClass = 'com.example.nationalpetition.NationalPetitionApplication'
}
// 추가 끝

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    dependsOn test
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
}

asciidoctor.doFirst {
    //asciidoctor 실행전 기존에 생성된 API 문서 삭제
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into "BOOT-INF/classes/static/docs"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.5.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '2.5.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.5.4'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.5.4'


    implementation("com.querydsl:querydsl-jpa")
    implementation("com.querydsl:querydsl-core")
    annotationProcessor("com.querydsl:querydsl-apt::jpa")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"
    }
}

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }

    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }

    finalizedBy 'jacocoTestReport'
}

// jacoco
jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        html.enabled false
        xml.enabled true
        csv.enabled false

        html.destination file("$buildDir/jacoco/jacoco.html")
        xml.destination file("$buildDir/jacoco/jacoco.xml")
    }

//    이 설정을 열어주면 Code Coverage가 일정 이상이어야 Build됨
//    finalizedBy 'jacocoTestCoverageVerification'
}

// query dsl
def queryDslDir = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [queryDslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(queryDslDir)
}

clean.doLast {
    file(queryDslDir).deleteDir()
}